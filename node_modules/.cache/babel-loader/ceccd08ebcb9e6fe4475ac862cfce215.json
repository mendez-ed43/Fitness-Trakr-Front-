{"ast":null,"code":"var _jsxFileName = \"/Users/Edwin/Desktop/Course_work/Fitness-Trakr-Front-/src/components/MyRoutines.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { SingleRoutine } from './';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  REACT_APP_BASE_URL = 'https://fitnesstrac-kr.herokuapp.com/api/'\n} = process.env;\n\nconst MyRoutines = ({\n  username,\n  token,\n  setMyRoutines,\n  myRoutines\n}) => {\n  _s();\n\n  const [routineName, setRoutineName] = useState('');\n  const [routineGoal, setRoutineGoal] = useState('');\n  const [isPublic, setIsPublic] = useState(false);\n\n  const fetchMyRoutines = async () => {\n    try {\n      if (username) {\n        const resp = await fetch(`${REACT_APP_BASE_URL}/users/${user.name}/routines`, {\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        console.log(\"<<<<\", resp);\n        const data = await resp.json();\n\n        if (data) {\n          setMyRoutines(data);\n        } else {\n          setMyRoutines([]);\n        }\n      }\n\n      return;\n    } catch (error) {\n      console.error(error);\n    }\n\n    ;\n  };\n\n  const handleDelete = async routineId => {\n    try {\n      await fetch(`${REACT_APP_BASE_URL}/routines/${routineId}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      await fetchMyRoutines();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      await fetch(`${REACT_APP_BASE_URL}/routines`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          name,\n          goal,\n          isPublic\n        })\n      });\n      const data = await response.json();\n\n      if (data) {\n        setRoutineName('');\n        setRoutineGoal('');\n        setIsPublic(false);\n        await fetchMyRoutines();\n      }\n\n      return;\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    try {\n      fetchMyRoutines();\n    } catch (error) {\n      console.error(error);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Create new routine:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Routine\",\n          onChange: event => setRoutineName(event.target.value),\n          value: routineName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Goal\",\n          onChange: event => setRoutineGoal(event.target.value),\n          value: routineGoal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Private?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: event => setIsPublic(event.target.value),\n          value: isPublic,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"true\",\n            children: \"Yes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"false\",\n            children: \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: !routineGoal || !routineName,\n          children: \"Create new routine\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), myRoutines.length > 0 ? myRoutines.map(routine => {\n          return /*#__PURE__*/_jsxDEV(SingleRoutine, {\n            routine: routine,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(routine.id),\n              children: \"Delete Routine\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this)\n          }, routine.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 28\n          }, this);\n        }) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(MyRoutines, \"yl9mr97OsG6tL+WQ7+PIHJqG1tM=\");\n\n_c = MyRoutines;\nexport default MyRoutines;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyRoutines\");","map":{"version":3,"sources":["/Users/Edwin/Desktop/Course_work/Fitness-Trakr-Front-/src/components/MyRoutines.js"],"names":["React","useState","useEffect","SingleRoutine","REACT_APP_BASE_URL","process","env","MyRoutines","username","token","setMyRoutines","myRoutines","routineName","setRoutineName","routineGoal","setRoutineGoal","isPublic","setIsPublic","fetchMyRoutines","resp","fetch","user","name","headers","console","log","data","json","error","handleDelete","routineId","method","handleSubmit","event","preventDefault","body","JSON","stringify","goal","response","target","value","length","map","routine","id"],"mappings":"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","sourcesContent":["\nimport React, {useState, useEffect} from 'react';\n\nimport { SingleRoutine } from './'\nconst { REACT_APP_BASE_URL = 'https://fitnesstrac-kr.herokuapp.com/api/' } = process.env;\n\nconst MyRoutines = ({username, token, setMyRoutines, myRoutines}) => {\n    const [routineName, setRoutineName] = useState('');\n    const [routineGoal, setRoutineGoal] = useState('');\n    const [isPublic, setIsPublic] = useState(false)\n\n    const fetchMyRoutines = async () => {\n        \n        try {\n            if(username) {\n                const resp = await fetch (`${REACT_APP_BASE_URL}/users/${user.name}/routines`, {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization': `Bearer ${token}`\n                    },\n                })\n                console.log(\"<<<<\", resp)\n                const data = await resp.json();\n                if (data) {\n                    setMyRoutines(data);\n                } else {\n                    setMyRoutines([]);\n                }\n            }\n            return\n            \n        } catch (error) {\n            console.error(error)\n        };\n    };\n\n    const handleDelete = async (routineId) => {\n        try {\n            await fetch(`${REACT_APP_BASE_URL}/routines/${routineId}`, {\n               method: 'DELETE',\n               headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n               }\n            })\n            await fetchMyRoutines();\n            \n        } catch (error) {\n            console.error(error)\n        }\n    }\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            await fetch(`${REACT_APP_BASE_URL}/routines`, {\n               method: 'POST',\n               headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n               }, body: JSON.stringify ({name, goal, isPublic})\n            })\n            const data = await response.json();\n            if(data) {\n                setRoutineName('');\n                setRoutineGoal('');\n                setIsPublic(false);\n                await fetchMyRoutines();\n            }\n            return;\n            \n        } catch (error) {\n            console.error(error)\n        }\n    }\n\n    useEffect(() => {\n        try {\n            fetchMyRoutines();\n        } catch (error) {\n            console.error(error)\n        }\n    }, [])\n\n    return <>\n    <div>\n        <h3>Create new routine:</h3>\n        <form onSubmit = {handleSubmit}>\n            <input type = 'text' placeholder = 'Routine' onChange = {(event) => setRoutineName(event.target.value)} value = {routineName}/>\n            <hr></hr>\n            <input type = 'text' placeholder = 'Goal' onChange = {(event) => setRoutineGoal(event.target.value)} value = {routineGoal}/>\n            <label>Private?</label>\n            <select onChange= {(event) => setIsPublic(event.target.value)} value = {isPublic}>\n                <option value='true'>Yes</option>\n                <option value='false'>No</option>\n            </select>\n            <button type = 'submit' disabled = {!routineGoal || !routineName}>Create new routine</button>\n            \n        {\n            myRoutines.length > 0 \n            ? myRoutines.map(routine => {\n                    return <SingleRoutine key = {routine.id} routine = {routine}>\n                        {\n                            <button onClick = {() => handleDelete(routine.id)}>Delete Routine</button>\n                        }\n\n                    </SingleRoutine>\n                }) : null\n        }\n        </form>\n    </div>\n        </>\n\n\n\n\n}\nexport default MyRoutines;"]},"metadata":{},"sourceType":"module"}