{"ast":null,"code":"var _jsxFileName = \"/Users/Edwin/Desktop/Course_work/Fitness-Trakr-Front-/src/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nconst {\n  REACT_APP_API_URL = 'http://localhost:3000/api'\n} = process.env;\nimport { CallApi } from './Components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = ({\n  username,\n  setUsername,\n  setToken,\n  setUser,\n  token,\n  setUserID\n}) => {\n  _s();\n\n  const [password, setPassword] = useState('');\n  const [secondPassword, setSecondPassword] = useState('');\n  const params = useParams();\n  const history = useHistory();\n  console.log('Before Submit: ', `${params.method}`);\n\n  const handleSubmit = async ev => {\n    try {\n      ev.preventDefault();\n      console.log('object :>> ', {\n        username,\n        password\n      });\n      const resp = await CallApi({\n        url: `/users/${params.method}`,\n        method: 'POST',\n        body: {\n          username,\n          password\n        }\n      });\n      const data = await resp.json();\n      console.log('<<><<< data', data);\n      const {\n        token\n      } = data;\n\n      if (token) {\n        localStorage.setItem('token', token);\n        setToken(token);\n        setUsername('');\n        setPassword('');\n        history.push('/home');\n      }\n    } catch (error) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"| Login User | Register User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"username\",\n          value: username,\n          onChange: event => setUsername(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"password\",\n          value: password,\n          onChange: event => setPassword(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this), params.method === 'register' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"SECOND PASSWORD INPUT WOULD GO HERE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 52\n        }, this) : '', /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: !password || !username,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Login, \"uBB9pvB5a45veIh182ci1o4fBh0=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/Edwin/Desktop/Course_work/Fitness-Trakr-Front-/src/Login.js"],"names":["React","useState","useParams","useHistory","REACT_APP_API_URL","process","env","CallApi","Login","username","setUsername","setToken","setUser","token","setUserID","password","setPassword","secondPassword","setSecondPassword","params","history","console","log","method","handleSubmit","ev","preventDefault","resp","url","body","data","json","localStorage","setItem","push","error","event","target","value"],"mappings":"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","sourcesContent":["\nimport React, {useState} from 'react'\nimport { useParams, useHistory } from 'react-router-dom'\n\nconst {REACT_APP_API_URL = 'http://localhost:3000/api'} = process.env;\nimport { CallApi } from './Components'\n\nconst Login = ({username, setUsername, setToken, setUser, token, setUserID}) => {\n    const [password, setPassword ] = useState('');\n    const[secondPassword, setSecondPassword] = useState('');\n    const params = useParams();\n    const history = useHistory();\n    console.log('Before Submit: ' , `${params.method}` )\n\n    const handleSubmit = async (ev) => {\n      try {\n        ev.preventDefault();\n        console.log('object :>> ', { username, password} );\n        const resp = await CallApi({\n          url: `/users/${params.method}`,\n          method: 'POST',\n          body: {\n              username,\n              password\n          }\n        });\n        const data = await resp.json();\n        console.log('<<><<< data', data);\n        const { token } = data;\n        if (token) {\n          localStorage.setItem('token', token);\n          setToken(token)\n          setUsername('');\n          setPassword('');\n          history.push('/home');\n        }\n        \n      } catch (error) {\n        \n      }\n    }\n    \n    return <>\n        <h1>\n        | Login User | Register User\n        </h1>\n        <form onSubmit = {handleSubmit} >\n            \n            {/* //if(loginResp.data) {\n            //   const userResp = await callApi({url: '/users/me', token: loginResp.data.token});\n            //   console.log('setUser: ', userResp)\n            //     // if we got back a token, get the user data\n            //     setToken(loginResp.data.token);\n            //     setUser(userResp.data);\n            //     setUserID(userResp.data._id)\n\n            //     if (loginResp.data.token) {\n            //       history.push('/account');\n            //     }\n            //   }\n            //   if (secondPassword !== password){\n            //     return console.error(error);\n            //   }\n              \n            //}}> */}\n            <div >\n                <input type=\"text\" placeholder=\"username\" value={username} onChange={(event) => setUsername(event.target.value)}></input>\n                <hr></hr>\n                <input type=\"password\" placeholder=\"password\" value={password} onChange={(event) => setPassword(event.target.value)}></input>\n                <hr></hr>\n                {\n                    params.method === 'register' ? <div>SECOND PASSWORD INPUT WOULD GO HERE</div> : ''\n                }\n                <button type=\"submit\" disabled={!password || !username}>Submit</button>\n            </div>\n        </form>\n    \n    </>\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}