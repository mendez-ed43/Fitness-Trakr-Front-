{"ast":null,"code":"var _jsxFileName = \"/Users/Edwin/Desktop/Course_work/Fitness-Trakr-Front-/src/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nconst {\n  REACT_APP_API_URL = 'http://localhost:3000/api'\n} = process.env;\nimport { CallApi } from './Components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = ({\n  username,\n  setUsername,\n  setToken,\n  setUser,\n  token,\n  setMessages,\n  setUserID\n}) => {\n  _s();\n\n  const [password, setPassword] = useState('');\n  const [secondPassword, setSecondPassword] = useState('');\n  const params = useParams();\n  const history = useHistory();\n  console.log('Before Submit: ', `${params.method}`);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"| Login User | Register User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: async event => {\n        event.preventDefault();\n        const fetchUrl = `${REACT_APP_BASE_URL}/users/register`;\n        console.log('fetchUrl: ', fetchUrl);\n        const loginResp = await CallApi({\n          url: `/users/${params.method}`,\n          method: 'POST',\n          body: {\n            user: {\n              username,\n              password\n            }\n          }\n        });\n        console.log('ParamsUrl: ', `${params.method}`);\n        console.log('token:', loginResp.data.token);\n\n        if (loginResp.data) {\n          const userResp = await callApi({\n            url: '/users/me',\n            token: loginResp.data.token\n          });\n          console.log('setUser: ', userResp); // if we got back a token, get the user data\n\n          setToken(loginResp.data.token);\n          setUser(userResp.data);\n          setMessages(userResp.data.messages);\n          setUserID(userResp.data._id);\n\n          if (loginResp.data.token) {\n            history.push('/account');\n          }\n        } // if (secondPassword !== password){\n        //   return console.error(error);\n        //}\n\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"username\",\n          value: username,\n          onChange: event => setUsername(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"password\",\n          value: password,\n          onChange: event => setPassword(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), params.method === 'register' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"SECOND PASSWORD INPUT WOULD GO HERE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 52\n        }, this) : '', /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: !password || !username,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Login, \"uBB9pvB5a45veIh182ci1o4fBh0=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/Edwin/Desktop/Course_work/Fitness-Trakr-Front-/src/Login.js"],"names":["React","useState","useParams","useHistory","REACT_APP_API_URL","process","env","CallApi","Login","username","setUsername","setToken","setUser","token","setMessages","setUserID","password","setPassword","secondPassword","setSecondPassword","params","history","console","log","method","event","preventDefault","fetchUrl","REACT_APP_BASE_URL","loginResp","url","body","user","data","userResp","callApi","messages","_id","push","target","value"],"mappings":"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","sourcesContent":["\nimport React, {useState} from 'react'\nimport { useParams, useHistory } from 'react-router-dom'\n\nconst {REACT_APP_API_URL = 'http://localhost:3000/api'} = process.env;\nimport { CallApi } from './Components'\n\nconst Login = ({username, setUsername, setToken, setUser, token, setMessages, setUserID}) => {\n    const [password, setPassword ] = useState('');\n    const[secondPassword, setSecondPassword] = useState('');\n    const params = useParams();\n    const history = useHistory();\n    console.log('Before Submit: ' , `${params.method}` )\n    \n    return <>\n        <h1>\n        | Login User | Register User\n        </h1>\n        <form onSubmit = {async (event) => {\n            event.preventDefault();\n            const fetchUrl = `${REACT_APP_BASE_URL}/users/register`\n            console.log('fetchUrl: ', fetchUrl);\n\n            const loginResp = await CallApi({\n                url: `/users/${params.method}`,\n                method: 'POST',\n                body: {\n                  user: {\n                    username,\n                    password\n                  }\n                }\n              });\n            console.log('ParamsUrl: ' , `${params.method}` );\n            console.log('token:', loginResp.data.token)\n            \n            if(loginResp.data) {\n              const userResp = await callApi({url: '/users/me', token: loginResp.data.token});\n              console.log('setUser: ', userResp)\n                // if we got back a token, get the user data\n                setToken(loginResp.data.token);\n                setUser(userResp.data);\n                setMessages(userResp.data.messages)\n                setUserID(userResp.data._id)\n\n                if (loginResp.data.token) {\n                  history.push('/account');\n                }\n              }\n              // if (secondPassword !== password){\n              //   return console.error(error);\n              //}\n              \n            }}>\n            <div >\n                <input type=\"text\" placeholder=\"username\" value={username} onChange={(event) => setUsername(event.target.value)}></input>\n                <hr></hr>\n                <input type=\"password\" placeholder=\"password\" value={password} onChange={(event) => setPassword(event.target.value)}></input>\n                <hr></hr>\n                {\n                    params.method === 'register' ? <div>SECOND PASSWORD INPUT WOULD GO HERE</div> : ''\n                }\n                <button type=\"submit\" disabled={!password || !username}>Submit</button>\n            </div>\n        </form>\n    \n    </>\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}