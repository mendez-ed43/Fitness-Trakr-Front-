{"ast":null,"code":"const {\n  REACT_APP_API_URL = 'https://fitnesstrac-kr.herokuapp.com/api'\n} = process.env;\n\nconst callApi = async ({\n  url,\n  method,\n  token,\n  body\n}) => {\n  try {\n    const options = {\n      method: method ? method.toUpperCase() : 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    };\n    if (token) options.headers['Authorization'] = `Bearer ${token}`; // console.log(\"optiones<><><>\", options);\n\n    const response = await fetch(`${REACT_APP_API_URL}${url}`, options);\n    const data = await response.json();\n\n    if (data.error) {\n      throw data.error;\n    }\n\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport default callApi;","map":{"version":3,"sources":["/Users/Edwin/Desktop/Course_work/Fitness-Trakr-Front-/src/CallApi.js"],"names":["REACT_APP_API_URL","process","env","callApi","url","method","token","body","options","toUpperCase","headers","JSON","stringify","response","fetch","data","json","error","console"],"mappings":"AACA,MAAK;AAACA,EAAAA,iBAAiB,GAAG;AAArB,IAAmEC,OAAO,CAACC,GAAhF;;AAEA,MAAMC,OAAO,GAAG,OAAO;AAACC,EAAAA,GAAD;AAAMC,EAAAA,MAAN;AAAcC,EAAAA,KAAd;AAAqBC,EAAAA;AAArB,CAAP,KAAsC;AAClD,MAAI;AACA,UAAMC,OAAO,GAAG;AACZH,MAAAA,MAAM,EAAEA,MAAM,GAAGA,MAAM,CAACI,WAAP,EAAH,GAA0B,KAD5B;AAEZC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAFG;AAKZH,MAAAA,IAAI,EAAEI,IAAI,CAACC,SAAL,CAAeL,IAAf;AALM,KAAhB;AAOA,QAAGD,KAAH,EAAUE,OAAO,CAACE,OAAR,CAAgB,eAAhB,IAAoC,UAASJ,KAAM,EAAnD,CARV,CASA;;AACA,UAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEd,iBAAkB,GAAEI,GAAI,EAA5B,EAA+BI,OAA/B,CAA5B;AACA,UAAMO,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AACA,QAAGD,IAAI,CAACE,KAAR,EAAe;AACX,YAAOF,IAAI,CAACE,KAAZ;AACH;;AACD,WAAOF,IAAP;AACH,GAhBD,CAgBE,OAAOE,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH;AACJ,CApBD;;AAsBA,eAAed,OAAf","sourcesContent":["\nconst{REACT_APP_API_URL = 'https://fitnesstrac-kr.herokuapp.com/api'} = process.env\n\nconst callApi = async ({url, method, token, body}) => {\n    try {\n        const options = {\n            method: method ? method.toUpperCase() : 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(body)\n        };\n        if(token) options.headers['Authorization'] = `Bearer ${token}`;\n        // console.log(\"optiones<><><>\", options);\n        const response = await fetch(`${REACT_APP_API_URL}${url}`, options);\n        const data = await response.json();\n        if(data.error) {\n            throw (data.error)\n        }\n        return data        \n    } catch (error) {\n        console.error(error)\n    }\n}\n\nexport default callApi;"]},"metadata":{},"sourceType":"module"}